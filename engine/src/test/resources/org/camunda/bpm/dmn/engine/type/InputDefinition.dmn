<?xml version="1.0" encoding="UTF-8"?>
<Definitions xmlns="http://www.omg.org/spec/DMN/20130901"
             xmlns:camunda="http://camunda.org/schema/1.0/dmn"
             id="definitions"
             name="camunda"
             namespace="http://camunda.org/dmn">
  
  <ItemDefinition id="stringItem">
    <typeDefinition>string</typeDefinition>
  </ItemDefinition>
  
  <ItemDefinition id="booleanItem">
    <typeDefinition>boolean</typeDefinition>
  </ItemDefinition>
  
  <ItemDefinition id="integerItem">
    <typeDefinition>integer</typeDefinition>
  </ItemDefinition>
  
  <ItemDefinition id="longItem">
    <typeDefinition>long</typeDefinition>
  </ItemDefinition>
  
  <ItemDefinition id="doubleItem">
    <typeDefinition>double</typeDefinition>
  </ItemDefinition>
  
  <ItemDefinition id="customItem">
    <typeDefinition>custom</typeDefinition>
  </ItemDefinition>
  
  <Decision id="decision">
    <DecisionTable id="decisionTable" isComplete="true" isConsistent="true">
      <clause id="clause1">
        <inputExpression id="inputExpression1">
          <text>type</text>
        </inputExpression>
        <inputEntry id="typeNone">
          <text>none</text>
        </inputEntry>
        <inputEntry id="typeString">
          <text>string</text>
        </inputEntry>
        <inputEntry id="typeBoolean">
          <text>boolean</text>
        </inputEntry>
        <inputEntry id="typeInteger">
          <text>integer</text>
        </inputEntry>
        <inputEntry id="typeLong">
          <text>long</text>
        </inputEntry>
        <inputEntry id="typeDouble">
          <text>double</text>
        </inputEntry>
        <inputEntry id="typeCustom">
          <text>custom</text>
        </inputEntry>
      </clause>
      <clause id="clause2">
        <inputExpression id="inputExpression2">
          <itemDefinition href="#stringItem" />
          <text>stringInput</text>
        </inputExpression>
        <inputEntry id="stringInput">
          <text>${cellInput=="a" || cellInput=="true" || cellInput=="4" || cellInput=="2" || cellInput=="4.2"}</text>
        </inputEntry>
        <inputEntry id="nullStringInput">
          <text>${cellInput == null}</text>
        </inputEntry>
      </clause>
      <clause id="clause3">
        <inputExpression id="inputExpression3">
          <itemDefinition href="#booleanItem" />
          <text>booleanInput</text>
        </inputExpression>
        <inputEntry id="booleanInput">
          <text>${cellInput==true || cellInput==false}</text>
        </inputEntry>
        <inputEntry id="nullBooleanInput">
          <text>${cellInput == null}</text>
        </inputEntry>
      </clause>
      <clause id="clause4">
        <inputExpression id="inputExpression4">
          <itemDefinition href="#integerItem" />
          <text>integerInput</text>
        </inputExpression>
        <inputEntry id="integerInput">
          <text>${cellInput==2 || cellInput==4}</text>
        </inputEntry>
        <inputEntry id="nullIntegerInput">
          <text>${cellInput == null}</text>
        </inputEntry>
      </clause>
      <clause id="clause8">
        <inputExpression id="inputExpression9">
          <itemDefinition href="#longItem" />
          <text>longInput</text>
        </inputExpression>
        <inputEntry id="longInput">
          <text>${cellInput==2 || cellInput==4}</text>
        </inputEntry>
        <inputEntry id="nullLongInput">
          <text>${cellInput == null}</text>
        </inputEntry>
      </clause>
      <clause id="clause5">
        <inputExpression id="inputExpression5">
          <itemDefinition href="#doubleItem" />
          <text>doubleInput</text>
        </inputExpression>
        <inputEntry id="doubleInput">
          <text>${cellInput==2.0 || cellInput==4.0 || cellInput==4.2}</text>
        </inputEntry>
        <inputEntry id="nullDoubleInput">
          <text>${cellInput == null}</text>
        </inputEntry>
      </clause>
      <clause id="clause6">
        <inputExpression id="inputExpression6">
          <itemDefinition href="#customItem" />
          <text>customInput</text>
        </inputExpression>
        <inputEntry id="originalCustomInput">
          <text>${cellInput==21}</text>
        </inputEntry>
        <inputEntry id="transformedCustomInput">
          <text>${cellInput==42}</text>
        </inputEntry>
      </clause>
      <clause id="clause7">
        <inputExpression id="inputExpression8">
          <text>noneInput</text>
        </inputExpression>
        <inputEntry id="originalInput">
          <text>${cellInput==input}</text>
        </inputEntry>
      </clause>
      <clause id="clause10">
        <outputEntry id="isString">
          <text>isString</text>
        </outputEntry>
        <outputEntry id="isBoolean">
          <text>isBoolean</text>
        </outputEntry>
        <outputEntry id="isInteger">
          <text>isInteger</text>
        </outputEntry>
        <outputEntry id="isLong">
          <text>isLong</text>
        </outputEntry>
        <outputEntry id="isDouble">
          <text>isDouble</text>
        </outputEntry>
        <outputEntry id="isOriginal">
          <text>isOriginal</text>
        </outputEntry>
        <outputEntry id="isCustom">
          <text>isCustom</text>
        </outputEntry>
        <outputEntry id="isNull">
          <text>isNull</text>
        </outputEntry>
      </clause>
      <rule id="rule1">
        <condition>typeString stringInput</condition>
        <conclusion>isString</conclusion>
      </rule>
      <rule id="rule5">
        <condition>typeBoolean booleanInput</condition>
        <conclusion>isBoolean</conclusion>
      </rule>
      <rule id="rule6">
        <condition>typeInteger integerInput</condition>
        <conclusion>isInteger</conclusion>
      </rule>
      <rule id="rule14">
        <condition>typeLong longInput</condition>
        <conclusion>isLong</conclusion>
      </rule>
      <rule id="rule7">
        <condition>typeDouble doubleInput</condition>
        <conclusion>isDouble</conclusion>
      </rule>
      <rule id="rule8">
        <condition>typeCustom originalCustomInput</condition>
        <conclusion>isOriginal</conclusion>
      </rule>
      <rule id="rule9">
        <condition>typeNone originalInput</condition>
        <conclusion>isOriginal</conclusion>
      </rule>
      <rule id="rule10">
        <condition>typeString nullStringInput</condition>
        <conclusion>isNull</conclusion>
      </rule>
      <rule id="rule11">
        <condition>typeBoolean nullBooleanInput</condition>
        <conclusion>isNull</conclusion>
      </rule>
      <rule id="rule12">
        <condition>typeInteger nullIntegerInput</condition>
        <conclusion>isNull</conclusion>
      </rule>
      <rule id="rule13">
        <condition>typeDouble nullDoubleInput</condition>
        <conclusion>isNull</conclusion>
      </rule>
      <rule id="rule15">
        <condition>typeLong nullLongInput</condition>
        <conclusion>isNull</conclusion>
      </rule>
      <rule id="rule16">
        <condition>typeCustom transformedCustomInput</condition>
        <conclusion>isCustom</conclusion>
      </rule>
    </DecisionTable>
  </Decision>
</Definitions>
